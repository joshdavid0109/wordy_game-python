module WordyGame {

  struct TopWord{
    string username;
    string word;
  };

  struct TopPlayer {
    long rank;
    string username;
    long wins;
  };

  typedef sequence<TopWord> TopWords;
  typedef sequence<TopPlayer> TopPlayers;
  typedef sequence<char> letters;

  struct WordyGamePlayer {
    long id;
    long wins;
    long gameID;
    string status; // ready or not
  };

  struct Game {
    long gameID;
    string status;
    WordyGamePlayer host;
    WordyGamePlayer winner;
  };

    exception NoPlayersAvailable {
      string reason;
    };

    exception UserAlreadyLoggedIn{
      string reason;
    };

    exception InvalidCredentials{
      string reason;
    };

    exception InvalidPassword{
      string reason;
    };

    exception ServerUnavailable {
      string reason;
    };

    exception InvalidWord {
      string reason;
    };

    exception WordLessThanFiveLetters{
      string reason;
    };

    exception ExceededTimeLimit{
      string reason;
    };

  interface WordyGameServer {
    void login(in string username, in string password) raises (InvalidCredentials, UserAlreadyLoggedIn, InvalidPassword, ServerUnavailable);
    void logout(in long userID);
    long playGame(in long userID) raises (NoPlayersAvailable);
    string ready(in long userID, in long gameID);
    void checkWord(in string word, in long gameID, in long userID) raises (InvalidWord, WordLessThanFiveLetters, ExceededTimeLimit);
    long getRound(in long gameID);
    string checkMatchStatus(in long gameID);
    letters requestLetters(in long gameID);
    string checkWinner(in long gameID);
    long getTimer(in string of);

    TopWords getLongestWords();
    TopPlayers getTopPlayers();
  };



};
